name: Ruby

on: [push,pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    services:
      rabbitmq:
        image: rabbitmq:latest
        ports:
        - 5672/tcp
        # needed because the rabbitmq container does not provide a healthcheck
        options: >-
          --health-cmd "rabbitmqctl node_health_check"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        ruby: ['2.6', '2.7', '3.0']
        include:
          - { ruby: jruby, allow-failure: true }
          - { ruby: truffleruby, allow-failure: true }
    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        ruby-version: ${{ matrix.ruby }}
    - name: Run tests (excluding TLS tests)
      continue-on-error: ${{ matrix.allow-failure || false }}
      run: bundle exec rake
      env:
        AMQP_PORT: ${{ job.services.rabbitmq.ports[5672] }}
  macos:
    runs-on: macos-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        ruby: ['3.0']
    steps:
    - name: Install RabbitMQ
      run: brew install rabbitmq
    - name: Start RabbitMQ
      run: brew services start rabbitmq
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        ruby-version: ${{ matrix.ruby }}
    - name: Verify RabbitMQ started correctly
      run: while true; do rabbitmq-diagnostics status 2>/dev/null && break; echo -n .; sleep 2; done
    - name: Run tests (excluding TLS tests)
      run: bundle exec rake
